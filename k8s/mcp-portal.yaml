apiVersion: v1
kind: Namespace
metadata:
  name: mcp-portal
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: mcp-portal
data:
  OPENAI_MODEL: "qwen3-235b-a22b"
  OPENAI_BASE_URL: "https://litellm.ai-server.fortiappsec.com/v1"
  REDIS_URL: "redis://10.160.13.16:6379/0"
  TASK_LOG_DIR: "/app/task_logs"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: mcp-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: 10.160.16.60/ai_services/mcp_server:backend_v0.6
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_FILE
              value: /app/data/data.db
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: openai-credentials
          volumeMounts:
            - name: task-logs
              mountPath: /app/task_logs
            - name: backend-data
              mountPath: /app/data
      volumes:
        - name: task-logs
          hostPath:
            path: /home/fortinet/mcp_log   # make sure this exists on the node
            type: DirectoryOrCreate
        - name: backend-data
          hostPath:
            path: /home/fortinet/mcp_db
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: mcp-portal
spec:
  selector:
    app: backend
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: mcp-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: 10.160.16.60/ai_services/mcp_server:frontend_v0.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: mcp-portal
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
